#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    behaviors {
        tap_d_playnext: tap_d_playnext {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_D_PLAYNEXT";
            #binding-cells = <0>;
            bindings = <&kp C_PLAY_PAUSE>, <&kp C_NEXT>, <&kp C_PREV>;
        };

        home_row: home_row {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "balanced";
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        apost {
            bindings = <&kp SQT>;
            key-positions = <10 9>;
            timeout-ms = <30>;
            layers = <0 3>;
        };

        cap_word {
            bindings = <&caps_word>;
            key-positions = <17 23>;
            timeout-ms = <50>;
            layers = <0 3>;
            require-prior-idle-ms = <150>;
        };

        l_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 4>;
            timeout-ms = <30>;
            layers = <0 3>;
        };

        r_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <8 9>;
            timeout-ms = <30>;
            layers = <0 3>;
        };

        l_parentesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 17>;
            timeout-ms = <30>;
            layers = <0 3>;
        };

        r_parentesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <23 24>;
            timeout-ms = <30>;
            layers = <0 3>;
        };

        mute {
            bindings = <&kp C_MUTE>;
            key-positions = <5 18>;
            timeout-ms = <30>;
            layers = <1>;
        };

        l_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <31 32>;
            timeout-ms = <30>;
            layers = <0 3>;
        };

        r_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <37 38>;
            timeout-ms = <30>;
            layers = <0 3>;
        };

        caps {
            bindings = <&kp CAPS>;
            key-positions = <4 8>;
            timeout-ms = <30>;
            layers = <0 3>;
        };

        to_macOS {
            bindings = <&tog 3>;
            key-positions = <44 45>;
            timeout-ms = <30>;
        };

        clear {
            bindings = <&bt BT_CLR>;
            key-positions = <10 11>;
            timeout-ms = <30>;
            layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "Penguin";
            bindings = <
&none  &kp Q                 &kp W                 &kp E                     &kp R                   &kp T                         &kp UP                &kp Y      &kp U                    &kp I                      &kp O                  &kp P                          &none
&none  &home_row LEFT_GUI A  &home_row LEFT_ALT S  &home_row LEFT_CONTROL D  &home_row LEFT_SHIFT F  &kp G               &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &home_row RIGHT_SHIFT J  &home_row RIGHT_CONTROL K  &home_row RIGHT_ALT L  &home_row RIGHT_GUI SEMICOLON  &none
&none  &kp Z                 &kp X                 &kp C                     &kp V                   &kp B      &none              &kp DOWN              &kp N      &kp M                    &kp COMMA                  &kp DOT                &kp FSLH                       &none
                                                   &kp ESCAPE                &kp BACKSPACE           &lt 1 TAB                                           &lt 2 DEL  &kp SPACE                &kp ENTER
            >;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp PRINTSCREEN  &kp PAGE_DOWN   &kp UP_ARROW  &kp PAGE_UP  &kp C_VOLUME_UP                                &mmv MOVE_UP                     &kp N7        &kp N8        &kp N9        &kp MINUS     &kp K_CALCULATOR  &none
&trans  &kp LC(A)        &kp LEFT_ARROW  &kp DOWN      &kp RIGHT    &kp C_VOL_DN                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS      &kp SLASH         &none
&trans  &kp LC(Z)        &kp LC(X)       &kp LC(C)     &kp LC(V)    &tap_d_playnext  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ASTERISK  &none             &none
                                         &trans        &trans       &trans                                                                          &none         &kp N0        &kp ENTER
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL       &kp AT     &kp HASH      &kp DLLR        &kp PRCNT                                &mmv MOVE_UP                     &kp GRAVE     &kp HOME      &none         &kp END  &none  &none
&trans  &kp CARET      &kp EQUAL  &kp PLUS      &kp UNDERSCORE  &kp PIPE                 &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bt BT_SEL 3  &none         &none         &none    &none  &none
&trans  &kp AMPERSAND  &kp TILDE  &kp ASTERISK  &kp MINUS       &kp BACKSLASH  &trans                    &mmv MOVE_DOWN                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none    &none  &none
                                  &trans        &trans          &bt BT_NXT                                                                &kp RET       &trans        &trans
            >;
        };

        Mac {
            display-name = "MacOS";
            bindings = <
&none  &kp Q                 &kp W                 &kp E                     &kp R                   &kp T                     &kp UP                &kp Y  &kp U                    &kp I                      &kp O                  &kp P                          &none
&none  &home_row LEFT_GUI A  &home_row LEFT_ALT S  &home_row LEFT_CONTROL D  &home_row LEFT_SHIFT F  &kp G           &kp LEFT  &kp ENTER  &kp RIGHT  &kp H  &home_row RIGHT_SHIFT J  &home_row RIGHT_CONTROL K  &home_row RIGHT_ALT L  &home_row RIGHT_GUI SEMICOLON  &none
&none  &kp Z                 &kp X                 &kp C                     &kp V                   &kp B  &none              &kp DOWN              &kp N  &kp M                    &kp COMMA                  &kp DOT                &kp FSLH                       &none
                                                   &kp ESCAPE                &kp BACKSPACE           &none                                           &none  &kp SPACE                &kp ENTER
            >;
        };
    };
};
